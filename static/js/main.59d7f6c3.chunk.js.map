{"version":3,"sources":["Components/Header/logo.png","Components/Header/Header.js","Components/Card/Card.js","Components/Grid/Grid.js","Components/Paginator/Paginator.js","Components/SearchBox/SearchBox.js","App.js","index.js"],"names":["Header","className","src","logo","alt","Card","character","isSelected","onSelectChange","selectedClass","image","name","class","species","location","onClick","id","prototype","PropTypes","object","isRequired","bool","func","Grid","nextFavorite","state","favorite","filter","selectedId","push","setState","this","props","characters","isLoading","map","includes","React","Component","propType","array","Pagina","currentPage","onChange","totalPages","nextPage","SearchBox","onInputChange","e","searchKey","target","value","onClickSubmit","onSubmit","type","placeholder","App","componentDidMount","fetchCharacters","componentDidUpdate","prevProps","prevState","a","url","URL","params","page","Object","keys","forEach","key","searchParams","append","fetch","response","json","results","info","pages","console","log","onPaginatorChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59d7f6c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b62096f7.png\";","import React from 'react';\r\nimport \"./Header.css\";\r\nimport logo from \"./logo.png\";\r\nfunction Header(){\r\n    return(\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <img src={logo} alt=\"logo\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Card.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nfunction Card({character,isSelected,onSelectChange}) {\r\n    const onClickButton = () => {\r\n        onSelectChange(character.id, isSelected);\r\n    }\r\n    const selectedClass = (isSelected ? \"selected\" : \"\");\r\n    return (\r\n        <div className={'card '+ selectedClass}>\r\n            <img src={character.image} alt={character.name} />\r\n            <div className=\"card-info\">\r\n                <p class=\"card-info__name\">\r\n                    <span>Name:</span>\r\n                    {character.name}\r\n                </p>\r\n                <p className=\"card-info__generic\">\r\n                    {character.species} <span className=\"card-info__generic\">from</span> {character.location.name}\r\n                </p>\r\n            </div>\r\n            <button className=\"favorite\" onClick={onClickButton}>\r\n                {isSelected ? \"Remove\":\"Add\"}\r\n                </button>\r\n        </div>\r\n    );\r\n}\r\nCard.prototype = {\r\n    character: PropTypes.object.isRequired,\r\n    isSelected: PropTypes.bool.isRequired,\r\n    onSelectChange: PropTypes.func.isRequired\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport './Grid.css';\r\nimport Card from \"../Card/Card\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Grid extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            favorite: []\r\n        }\r\n    };\r\n    onSelectChange=(id,isSelected) => {\r\n        let nextFavorite = [...this.state.favorite];\r\n        if(!isSelected){\r\n            nextFavorite.push(id)\r\n        }else{\r\n            nextFavorite=nextFavorite.filter((selectedId)=> selectedId !== id)\r\n        }\r\n        this.setState({\r\n            favorite:nextFavorite\r\n        })\r\n    }\r\n    render() {\r\n        const { characters, isLoading } = this.props;\r\n        const {favorite} =this.state;\r\n        return (\r\n            <div className=\"container grid\">\r\n                {characters.map((character) => (\r\n                    <Card key={character.id} character={character} isSelected={favorite.includes(character.id)} onSelectChange={this.onSelectChange} />\r\n                ))}\r\n                {isLoading && (\r\n                    <div className=\"loading\">\r\n                        <p>Loading...</p>\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nGrid.propType = {\r\n    characters: PropTypes.array.isRequired,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./Paginator.css\";\r\n\r\nconst Pagina = ({currentPage,onChange,totalPages}) => {\r\n    const onClickPrev = () => {\r\n        const nextPage = currentPage -1\r\n        if(nextPage >0){\r\n            onChange(nextPage);\r\n        }\r\n    };\r\n    const onClickNext = () => {\r\n        \r\n            const nextPage = currentPage + 1\r\n            if(nextPage <= totalPages){\r\n                onChange(nextPage);\r\n        }\r\n    };\r\n    return(\r\n        <div className=\"container paginator\">\r\n            <button onClick={onClickPrev}>Prev</button>\r\n            <p>\r\n                Page <span>{currentPage}</span> of {totalPages}\r\n            </p>\r\n            <button onClick={onClickNext}>Next</button>\r\n        </div>    \r\n    );\r\n};\r\nPagina.propTypes={\r\n    currentPage: PropTypes.number.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    totalPages: PropTypes.number.isRequired\r\n}\r\nexport default Pagina;\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass SearchBox extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            searchKey:\"\"\r\n        };\r\n    }\r\n    onInputChange=(e)=>{\r\n        this.setState({searchKey: e.target.value})\r\n    }\r\n    onClickSubmit = () => {\r\n        this.props.onSubmit(this.state.searchKey);\r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"container searchBox\">\r\n        <input type=\"text\" placeholder=\"Search\" onChange={this.onInputChange}/>\r\n        <button onClick={this.onClickSubmit}>\r\n            {'>'}\r\n        </button>\r\n    </div>\r\n        );}\r\n}\r\nSearchBox.propTypes={\r\n    onSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchBox;\r\n","\r\nimport './App.css';\r\nimport React from 'react';\r\nimport Header from './Components/Header/Header.js';\r\nimport Grid from './Components/Grid/Grid.js';\r\nimport Pagina from './Components/Paginator/Paginator'\r\nimport SearchBox from './Components/SearchBox/SearchBox'\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      searchKey:\"\",\r\n      totalPages: 1,\r\n      currentPage: 1,\r\n      isLoading: false,\r\n      characters:[]\r\n    }\r\n  }\r\n  componentDidMount = () =>{\r\n    this.fetchCharacters();\r\n  }\r\n  componentDidUpdate = (prevProps,prevState) =>{\r\n    if(prevState.currentPage !== this.state.currentPage || \r\n      prevState.searchKey !== this.state.searchKey){\r\n      this.fetchCharacters();\r\n    }\r\n  }\r\n  fetchCharacters = async () =>{\r\n    try{\r\n      this.setState({isLoading:true})\r\n      const url = new URL(\"https://rickandmortyapi.com/api/character\")\r\n      const params = {\r\n        page:this.state.currentPage,\r\n        name: this.state.searchKey\r\n      }\r\n      Object.keys(params).forEach((key) =>\r\n        url.searchParams.append(key,params[key])\r\n      );\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n\r\n      \r\n      this.setState({characters:json.results,totalPages:json.info.pages})\r\n    }catch(e){\r\n      console.log(e);\r\n    }finally{\r\n      this.setState({isLoading:false})\r\n    }\r\n  }\r\n  onPaginatorChange = (nextPage) => {\r\n    this.setState({currentPage:nextPage})\r\n  }\r\n  onSubmit=(searchKey) =>{\r\n    this.setState({\r\n      searchKey\r\n    })\r\n  }\r\n  render(){\r\n    const {characters,isLoading,currentPage,totalPages} = this.state;\r\n    return (\r\n    <div className=\"App\">\r\n     <Header />\r\n     <SearchBox onSubmit={this.onSubmit}/>\r\n     <Grid characters={characters} isLoading={isLoading}/>\r\n     <Pagina currentPage={currentPage} onChange={this.onPaginatorChange} totalPages={totalPages}/>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}